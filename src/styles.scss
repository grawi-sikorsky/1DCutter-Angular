
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-legacy-typography-config());`
@include mat.all-legacy-component-typographies();
@include mat.legacy-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$OneDCutter-A-primary: mat.define-palette(mat.$indigo-palette);
$OneDCutter-A-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$OneDCutter-A-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$OneDCutter-A-theme: mat.define-light-theme((
  color: (
    primary: $OneDCutter-A-primary,
    accent: $OneDCutter-A-accent,
    warn: $OneDCutter-A-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-legacy-component-themes($OneDCutter-A-theme);

/* You can add global styles to this file, and also import other style files */

html {
  height: 100%;
}

body {
  position: relative;
  margin: 0;
  padding-bottom: 4rem;
  min-height: 100%;
}

@import '@angular/material/theming';
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-legacy-typography-config());`
@include mat.all-legacy-component-typographies();
@include mat.legacy-core();

$mat-primary-scheme: (
  100: #d9dee8,
  500: #2c567b,
  700: #2c567b,
  contrast: (
    100: rgba(0,0,0,0.87),
    500: #ffffff,
    700: #ffffff,
  )
);
$mat-accent-scheme: (
  100: #d99736,
  500: #d99736,
  700: #593a88,
  contrast: (
    100: rgba(0,0,0,0.87),
    500: rgba(255,255,255,0.87),
    700: #ffffff,
  )
);

$mat-primary-palette: mat.define-palette($mat-primary-scheme);
$mat-accent-palette: mat.define-palette($mat-accent-scheme);

$app-light-theme: mat.define-light-theme($mat-primary-palette, $mat-accent-palette);
$app-dark-theme: mat.define-dark-theme($mat-primary-palette, $mat-accent-palette);

//@include angular-material-theme($app-dark-theme);

.light-mode{
  @include mat.all-legacy-component-themes($app-light-theme);
}
// following section is for dark mode.
// use appropriate class name for darkMode

.dark-mode{
  @include mat.all-legacy-component-themes($app-dark-theme);
}
html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
